section.common_timeLine
  - user = User.find_by(id: @micropost.user_id)
  .common_timeLine_data
    .common_timeLine_data_icon
      =link_to "/bector/users/#{user.user_id}" do
        - if user.icon.attached?
          = image_tag user.icon
        - else
          = image_tag "/user_images/default_icon.png"
    .common_timeLine_data_container
      .common_timeLine_data_container_top
        p.common_timeLine_data_container_top_name
          = render "components/show_star_name", user: user
        p.common_timeLine_data_container_top_id = "@#{user.user_id}"
        p.common_timeLine_data_container_top_date = @micropost.created_at.strftime("%Y年%m月%d日%H時%M分")

      .common_timeLine_data_container_content
        p= simple_format(sanitize(markdown(@micropost.content), tags: %w(h1 h2 h3 h4 h5 strong em a p), attributes: %w(href)).html_safe)

        - if type == "bector"
          - if @micropost.tags.present?
            - @micropost.tags.each do |tag|
              = link_to "##{tag.name} ", "/bector/tags/#{tag.name}"

      - if type == "bector"

        - post_images = @micropost.images
        - if post_images.attached?
          - post_images.each do |image|
            = image_tag image, class: "common_timeLine_data_container_img"

        .app_reactionContainer

          div id="heart_reaction_#{@micropost.id}"
            = render "components/reaction",  type: "heart", faName: "heart", post: @micropost, color: "pink", user: user
          div id="good_reaction_#{@micropost.id}"
            = render "components/reaction",  type: "good", faName: "thumbs-up", post: @micropost, color: "blue", user: user
          div id="cry_reaction_#{@micropost.id}"
            = render "components/reaction",  type: "cry", faName: "sad-tear", post: @micropost, color: "deepskyblue", user: user
          div id="surprise_reaction_#{@micropost.id}"
            = render "components/reaction",  type: "surprise", faName: "surprise", post: @micropost, color: "darkorange", user: user
          div id="angry_reaction_#{@micropost.id}"
            = render "components/reaction",  type: "angry", faName: "angry", post: @micropost, color: "red", user: user

          = render "components/reportButton", data: @micropost, type: type

          - if @micropost.user_id == current_user.id
            = form_with scope: :micropost, url: "/bector/destroy", local: true do |f|
              = f.hidden_field :post_id, :value => @micropost.id
              = button_tag type: "submit", class: "common_timeLine_data_container_report", data: { confirm: "投稿を削除しますか？\n削除した投稿は運営が30日間確認することができますが、ユーザーは元に戻すことはできません。"} do
                i.far.fa-trash-alt

  - @comments.each do |comment|
    - user = User.find_by(id: comment.user_id)

    .common_timeLine_data

      .common_timeLine_data_icon
        =link_to "/bector/users/#{user.user_id}" do
          - if user.icon.attached?
            = image_tag user.icon
          - else
            = image_tag "/user_images/default_icon.png"

      .common_timeLine_data_container
        .common_timeLine_data_container_top
          i.fas.fa-reply-all
          p.common_timeLine_data_container_top_name
            = render "components/show_star_name", user: user
          p.common_timeLine_data_container_top_id = "@#{user.user_id}"
          p.common_timeLine_data_container_top_date = date_display(comment.created_at)

        .common_timeLine_data_container_content
          p= simple_format(sanitize(markdown(comment.content), tags: %w(h1 h2 h3 h4 h5 strong em a p), attributes: %w(href)).html_safe)
